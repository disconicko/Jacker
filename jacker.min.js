const styleElement=document.createElement("style");styleElement.textContent=".custom-input-field{position:absolute;min-width:100px;min-height:20px;padding:0;border:1px dashed rgba(255,0,0,.3);background-color:rgba(255,0,0,.05);resize:both;overflow:auto;z-index:1000}.custom-input-field:hover{border:1px dashed rgba(255,0,0,.7);background-color:rgba(255,0,0,.1)}.custom-input-field::after{content:'';position:absolute;bottom:0;right:0;width:10px;height:10px;background-color:rgba(255,0,0,.3);cursor:nwse-resize}.custom-button{position:absolute;width:80px;height:30px;background-color:rgba(150,150,150,.3);color:rgba(255,255,255,.8);border:none;cursor:pointer;z-index:1000;display:flex;justify-content:center;align-items:center;font-size:12px}.add-button,.export-button{position:fixed;background-color:rgba(150,150,150,.3);color:rgba(255,255,255,.5);border:none;cursor:pointer;display:flex;justify-content:center;align-items:center;z-index:1001}.add-button{bottom:20px;right:20px;width:40px;height:40px;font-size:18px}.export-button{bottom:20px;right:70px;width:70px;height:40px;font-size:14px}.url-input-container{position:fixed;bottom:70px;right:20px;display:flex;background-color:rgba(150,150,150,.1);padding:5px;z-index:1001;width:300px}.url-input-label{font-size:12px;color:rgba(150,150,150,.7);margin-right:5px}.url-input-field{flex-grow:1;border:1px solid rgba(200,200,200,.3);background-color:rgba(255,255,255,.1);color:rgba(0,0,0,.8);font-size:12px;padding:3px}";document.head.appendChild(styleElement);const addButton=document.createElement("button");addButton.className="add-button",addButton.textContent="+",document.body.appendChild(addButton);const exportButton=document.createElement("button");exportButton.className="export-button",exportButton.textContent="Export",document.body.appendChild(exportButton);const urlContainer=document.createElement("div");urlContainer.className="url-input-container";const urlLabel=document.createElement("span");urlLabel.className="url-input-label",urlLabel.textContent="Example URL:",urlContainer.appendChild(urlLabel);const urlInput=document.createElement("input");urlInput.className="url-input-field",urlInput.type="text",urlInput.value="https://example.com",urlInput.placeholder="Enter URL for form submission",urlContainer.appendChild(urlInput),document.body.appendChild(urlContainer);const submitButton=document.createElement("button");submitButton.className="custom-button",submitButton.textContent="Submit",submitButton.style.top="80px",submitButton.style.left="20px",document.body.appendChild(submitButton),makeDraggable(submitButton);let fieldCounter=0;function createInputField(){fieldCounter++;const e=document.createElement("div");e.className="custom-input-field",e.style.top=`${100+50*fieldCounter}px`,e.style.left="100px",e.style.width="200px",e.style.height="30px";const t=document.createElement("input");t.type="text",t.style.width="100%",t.style.height="100%",t.style.boxSizing="border-box",t.style.border="none",t.style.padding="5px",t.style.background="transparent",t.style.outline="none",e.appendChild(t),document.body.appendChild(e),makeDraggable(e),t.focus();const n=new ResizeObserver(()=>{t.style.width="100%",t.style.height="100%"});n.observe(e)}function makeDraggable(e){let t,n,o,a;function r(r){if("INPUT"===r.target.tagName){const t=e.getBoundingClientRect(),n=10,o=r.clientX-t.left<n,a=t.right-r.clientX<n,i=r.clientY-t.top<n,l=t.bottom-r.clientY<n;if(!(o||a||i||l))return}r.preventDefault(),o=r.clientX,a=r.clientY,document.onmouseup=l,document.onmousemove=i}function i(r){r.preventDefault(),t=o-r.clientX,n=a-r.clientY,o=r.clientX,a=r.clientY,e.style.top=e.offsetTop-n+"px",e.style.left=e.offsetLeft-t+"px"}function l(){document.onmouseup=null,document.onmousemove=null}e.onmousedown=r}function exportFormAsHTML(){const e=document.querySelectorAll(".custom-input-field"),t=document.querySelector(".custom-button"),n=document.querySelector(".url-input-field").value||"https://example.com",o=window.location.href,a=window.scrollX||window.pageXOffset,r=window.scrollY||window.pageYOffset;let i=`
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Exported Form</title>
  <style>
    body, html {
      margin: 0;
      padding: 0;
      height: 100%;
      overflow: hidden;
    }
    iframe {
      width: 100%;
      height: 100%;
      border: none;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;
    }
    .overlay-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 2;
    }
    .form-input {
      position: absolute;
      z-index: 10;
      background: transparent;
      border: none;
      outline: none;
      color: black;
      pointer-events: auto;
    }
    .form-input:focus {
      outline: none;
      border: none;
      background: transparent;
    }
    .submit-button {
      position: absolute;
      z-index: 10;
      width: 80px;
      height: 30px;
      background-color: transparent;
      color: transparent;
      border: none;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 12px;
      pointer-events: auto;
    }
  </style>
  <script>
    window.onload = function() {
      const inputs = document.querySelectorAll('.form-input');
      const iframe = document.querySelector('iframe');
      
      function syncScroll() {
        const overlayContainer = document.querySelector('.overlay-container');
        overlayContainer.style.transform = 'translate(0, ' + (-window.scrollY) + 'px)';
      }
      
      window.addEventListener('scroll', syncScroll);
      
      const addHoverEffects = false;
      
      if (addHoverEffects) {
        inputs.forEach(input => {
          input.addEventListener('mouseover', function() {
            this.style.border = '1px dashed rgba(255, 0, 0, 0.3)';
            this.style.background = 'rgba(255, 0, 0, 0.05)';
          });
          
          input.addEventListener('mouseout', function() {
            this.style.border = 'none';
            this.style.background = 'transparent';
          });
        });
        
        const submitBtn = document.querySelector('.submit-button');
        submitBtn.addEventListener('mouseover', function() {
          this.style.backgroundColor = 'rgba(150, 150, 150, 0.3)';
          this.style.color = 'rgba(255, 255, 255, 0.8)';
        });
        
        submitBtn.addEventListener('mouseout', function() {
          this.style.backgroundColor = 'transparent';
          this.style.color = 'transparent';
        });
      }
      
      document.querySelector('.submit-button').addEventListener('click', function() {
        let targetUrl = "${n}";
        const params = new URLSearchParams();
        
        inputs.forEach((input, index) => {
          params.append('field' + (index + 1), input.value || '');
        });
        
        const finalUrl = targetUrl + (targetUrl.includes('?') ? '&' : '?') + params.toString();
        window.location.href = finalUrl;
      });
      
      iframe.onload = function() {
        try {
          iframe.contentWindow.scrollTo(${a}, ${r});
        } catch(e) {
          console.log('Could not scroll iframe due to security restrictions');
        }
      };
    };
  </script>
</head>
<body>
  <iframe src="${o}" sandbox="allow-same-origin allow-scripts"></iframe>
  <div class="overlay-container">
`;e.forEach(e=>{const t=e.querySelector("input"),n=e.getBoundingClientRect(),o=t?t.value:"";i+=`
    <input type="text" class="form-input" style="top: ${n.top+r}px; left: ${n.left+a}px; width: ${n.width}px; height: ${n.height}px;" value="${o}" />`});if(t){const e=t.getBoundingClientRect();i+=`
    <button class="submit-button" style="top: ${e.top+r}px; left: ${e.left+a}px; width: ${e.width}px; height: ${e.height}px;">Submit</button>`}i+=`
  </div>
</body>
</html>`;const l=new Blob([i],{type:"text/html"}),d=URL.createObjectURL(l),s=document.createElement("a");s.href=d,s.download="exported-form.html",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(d)}addButton.addEventListener("click",()=>{createInputField()}),exportButton.addEventListener("click",()=>{exportFormAsHTML()}),console.log("Minimal input fields system initialized. Click the + button to add fields");
</html>`;const l=new Blob([i],{type:"text/html"}),d=URL.createObjectURL(l),s=document.createElement("a");s.href=d,s.download="exported-form.html",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(d)}addButton.addEventListener("click",()=>{createInputField()}),exportButton.addEventListener("click",()=>{exportFormAsHTML()}),console.log("âœ… Minimal input fields system initialized. Click the + button to add fields, Export to export!");
